{"version":3,"sources":["components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/NoCommentsMessage/NoCommentsMessage.jsx","components/UserInfo/UserInfo.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["CommentInfo","comment","name","email","body","className","href","CommentList","comments","map","el","id","NoCommentsMessage","UserInfo","user","PostInfo","post","title","length","PostList","posts","findUser","users","usersFromServer","find","userId","findComments","allComments","filter","postId","postsFromServer","commentsFromServer","App","ReactDOM","render","document","getElementById"],"mappings":"408IAAaA,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpBC,EAAsBD,EAAtBC,KAAMC,EAAgBF,EAAhBE,MAAOC,EAASH,EAATG,KAErB,OACE,sBAAKC,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SAAuCH,IAEtC,OAED,mBAAGG,UAAU,qBAAqBC,KAAI,iBAAYH,GAAlD,SACGA,OAIL,qBAAKE,UAAU,oBAAf,SACGD,QCbIG,G,MAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzB,qBAAKH,UAAU,cAAf,SACGG,EAASC,KAAI,SAAAC,GAAE,OAAI,cAAC,EAAD,CAAaT,QAASS,GAASA,EAAGC,WCL7CC,EAAoB,kBAC/B,mBAAG,UAAQ,oBAAX,8BCCWC,G,MAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACjBZ,EAAgBY,EAAhBZ,KAAMC,EAAUW,EAAVX,MAEd,OACE,mBAAGE,UAAU,WAAWC,KAAI,iBAAYH,GAAxC,SACGD,MCFMa,G,MAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACjBF,EAASE,EAATF,KACAN,EAAaQ,EAAbR,SAER,OACE,sBAAKH,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SAAiCW,EAAKC,QAEtC,8BACG,eACAH,GAAQ,cAAC,EAAD,CAAUA,KAAMA,UAI7B,mBAAGT,UAAU,iBAAb,SAA+BW,EAAKZ,OAEf,IAApBI,EAASU,OACN,cAAC,EAAD,CAAaV,SAAUA,IACvB,cAAC,EAAD,SCtBGW,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,qBAAKf,UAAU,WAAf,SACGe,EAAMX,KAAI,SAAAO,GAAI,OAAI,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKL,UCGvD,SAASU,EAASC,EAAON,GAGvB,OAFaO,EAAgBC,MAAK,SAAAd,GAAE,OAAIA,EAAGC,KAAOK,EAAKS,UAKzD,SAASC,EAAaC,EAAaX,GAGjC,OAFiBW,EAAYC,QAAO,SAAAlB,GAAE,OAAIA,EAAGmB,SAAWb,EAAKL,MAK/D,IAAMS,EAAQU,EAAgBrB,KAAI,SAAAO,GAAI,kCACjCA,GADiC,IAEpCF,KAAMO,EAASE,EAAiBP,GAChCR,SAAUkB,EAAaK,EAAoBf,QAGhCgB,EAAM,kBACjB,0BAAS3B,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCAEA,cAAC,EAAD,CAAUe,MAAOA,QCzBrBa,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2fd7d003.chunk.js","sourcesContent":["export const CommentInfo = ({ comment }) => {\n  const { name, email, body } = comment;\n\n  return (\n    <div className=\"CommentInfo\">\n      <div className=\"CommentInfo__title\">\n        <strong className=\"CommentInfo__name\">{name}</strong>\n\n        {' by '}\n\n        <a className=\"CommentInfo__email\" href={`mailto:${email}`}>\n          {email}\n        </a>\n      </div>\n\n      <div className=\"CommentInfo__body\">\n        {body}\n      </div>\n    </div>\n  );\n};\n","import { CommentInfo } from '../CommentInfo';\nimport './CommentList.scss';\n\nexport const CommentList = ({ comments }) => (\n  <div className=\"CommentList\">\n    {comments.map(el => <CommentInfo comment={el} key={el.id} />)}\n  </div>\n);\n","export const NoCommentsMessage = () => (\n  <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n);\n","import './UserInfo.scss';\n\nexport const UserInfo = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import { CommentList } from '../CommentList';\nimport { NoCommentsMessage } from '../NoCommentsMessage';\nimport { UserInfo } from '../UserInfo';\nimport './PostInfo.scss';\n\nexport const PostInfo = ({ post }) => {\n  const { user } = post;\n  const { comments } = post;\n\n  return (\n    <div className=\"PostInfo\">\n      <div className=\"PostInfo__header\">\n        <h3 className=\"PostInfo__title\">{post.title}</h3>\n\n        <p>\n          {' Posted by  '}\n          {user && <UserInfo user={user} />}\n        </p>\n      </div>\n\n      <p className=\"PostInfo__body\">{post.body}</p>\n\n      {comments.length !== 0\n        ? <CommentList comments={comments} />\n        : <NoCommentsMessage />\n      }\n\n    </div>\n  );\n};\n","import { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <div className=\"PostList\">\n    {posts.map(post => <PostInfo post={post} key={post.id} />)}\n  </div>\n);\n","import './App.scss';\r\n\r\nimport postsFromServer from './api/posts.json';\r\nimport commentsFromServer from './api/comments.json';\r\nimport usersFromServer from './api/users.json';\r\nimport { PostList } from './components/PostList';\r\n\r\nfunction findUser(users, post) {\r\n  const user = usersFromServer.find(el => el.id === post.userId);\r\n\r\n  return user;\r\n}\r\n\r\nfunction findComments(allComments, post) {\r\n  const comments = allComments.filter(el => el.postId === post.id);\r\n\r\n  return comments;\r\n}\r\n\r\nconst posts = postsFromServer.map(post => ({\r\n  ...post,\r\n  user: findUser(usersFromServer, post),\r\n  comments: findComments(commentsFromServer, post),\r\n}));\r\n\r\nexport const App = () => (\r\n  <section className=\"App\">\r\n    <h1 className=\"App__title\">Static list of posts</h1>\r\n\r\n    <PostList posts={posts} />\r\n  </section>\r\n);\r\n","import ReactDOM from 'react-dom';\r\n\r\nimport { App } from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}